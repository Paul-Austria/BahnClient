@page "/AddSw"
@using ModellClientLib.Context;
@using ModellClientLib.Controllers;
@using ModellClientLib.Models;
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Add Switch</PageTitle>

<div class="container mt-4">
    <h1>Add Switch</h1>

    @if (!processing)
    {
        <EditForm Model="@sw" OnValidSubmit="Add" class="mt-4">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="pinNumber">Pin Number:</label>
                <InputNumber @bind-Value="sw.pinNumber" class="form-control" />
                <ValidationMessage For="@(() => sw.pinNumber)" />
            </div>

            <div class="form-group">
                <label for="name">Name:</label>
                <InputText @bind-Value="sw.name" class="form-control" />
                <ValidationMessage For="@(() => sw.name)" />
            </div>

            <div class="form-group form-check">
                <InputCheckbox @bind-Value="sw.state" class="form-check-input" />
                <label class="form-check-label" for="state">State</label>
            </div>

            <div class="form-group form-check">
                <InputCheckbox @bind-Value="sw.CoSwitch" class="form-check-input" />
                <label class="form-check-label" for="CoSwitch">CoSwitch</label>
            </div>

            <div class="form-group">
                <label for="topic">Topic:</label>
                <InputText @bind-Value="sw.topic" class="form-control" />
                <ValidationMessage For="@(() => sw.topic)" />
            </div>

            <button type="submit" class="btn btn-primary">Add Switch</button>
        </EditForm>
    }
    else
    {
        <div class="mt-4">
            <p><em>Processing...</em></p>
            <!-- You can also add a loading spinner here if you have one -->
        </div>
    }
</div>

@code {
    ModellDBContext context = new ModellDBContext();
    Switch sw = new Switch();
    bool processing = false;

    void Add()
    {
        processing = true;
        SwitchController.AddSwitch(sw);
        sw = new Switch();
        processing = false;
    }
}
