@page "/ServoList"
@using ModellClientLib.Context;
@using ModellClientLib.Controllers;
@using ModellClientLib.Models
@inject NavigationManager Navigation

<PageTitle>Servo List</PageTitle>

<div class="container mt-4">
    <h1>Servo List</h1>

    <table class="table table-striped mt-4">
        <thead>
            <tr>
                <th>ID</th>
                <th>Topic</th>
                <th>Name</th>
                <th>PWM Pin ID</th>
                <th>Min Degree</th>
                <th>Max Degree</th>
                <th>SetDegrees</th>
                <th>Delete</th>
                <th>SetToMax</th>
                <th>SetToMin</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var servo in servos)
            {
                <tr>
                    <td>@servo.iD</td>
                    <td>@servo.topic</td>
                    <td>@servo.name</td>
                    <td>@servo.pwmPinId</td>
                    <td>@servo.MinDegree</td>
                    <td>@servo.MaxDegree</td>
                    <td>@servo.degree</td>

                    <td>
                        <button class="btn btn-danger" @onclick="@(() => DeleteServo(servo.iD))">Delete</button>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="@(() => UpdateServoValue(servo,servo.MaxDegree))">Max</button>
                    </td>
                    <td>
                        <button class="btn btn-danger" @onclick="@(() => UpdateServoValue(servo,servo.MinDegree))">Min</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    ModellDBContext context = new ModellDBContext();
    IEnumerable<Servo> servos;

    async void UpdateServoValue(Servo servoToUpdate,int newValue)
    {
        servoToUpdate.degree = newValue;
        await ServoController.UpdateServoAsync(servoToUpdate).ConfigureAwait(false);
    }
    protected override void OnInitialized()
    {
        // Load servos from the database or another data source
        servos = ServoController.GetServos();
    }

    void DeleteServo(int servoId)
    {
        // Add logic to delete the servo by ID
        ServoController.Delete(servoId);
    }
}
